sap.ui.define([], function () {
  "use strict";

  var _exports = {};
  var ActionType;

  (function (ActionType) {
    ActionType["DataFieldForAction"] = "ForAction";
    ActionType["DataFieldForIntentBasedNavigation"] = "ForNavigation";
    ActionType["Default"] = "Default";
    ActionType["Primary"] = "Primary";
    ActionType["Secondary"] = "Secondary";
    ActionType["DefaultApply"] = "DefaultApply";
    ActionType["Menu"] = "Menu";
  })(ActionType || (ActionType = {}));

  _exports.ActionType = ActionType;
  var VisualizationType;

  (function (VisualizationType) {
    VisualizationType["Table"] = "Table";
    VisualizationType["Chart"] = "Chart";
  })(VisualizationType || (VisualizationType = {}));

  _exports.VisualizationType = VisualizationType;
  var VariantManagementType;

  (function (VariantManagementType) {
    VariantManagementType["Page"] = "Page";
    VariantManagementType["Control"] = "Control";
    VariantManagementType["None"] = "None";
  })(VariantManagementType || (VariantManagementType = {}));

  _exports.VariantManagementType = VariantManagementType;
  var CreationMode;

  (function (CreationMode) {
    CreationMode["NewPage"] = "NewPage";
    CreationMode["Inline"] = "Inline";
    CreationMode["CreationRow"] = "CreationRow";
  })(CreationMode || (CreationMode = {}));

  _exports.CreationMode = CreationMode;
  var AvailabilityType;

  (function (AvailabilityType) {
    AvailabilityType["Default"] = "Default";
    AvailabilityType["Adaptation"] = "Adaptation";
    AvailabilityType["Hidden"] = "Hidden";
  })(AvailabilityType || (AvailabilityType = {}));

  _exports.AvailabilityType = AvailabilityType;
  var HorizontalAlign;

  (function (HorizontalAlign) {
    HorizontalAlign["End"] = "End";
    HorizontalAlign["Begin"] = "Begin";
    HorizontalAlign["Center"] = "Center";
  })(HorizontalAlign || (HorizontalAlign = {}));

  _exports.HorizontalAlign = HorizontalAlign;
  var SelectionMode;

  (function (SelectionMode) {
    SelectionMode["Auto"] = "Auto";
    SelectionMode["None"] = "None";
    SelectionMode["Multi"] = "Multi";
    SelectionMode["Single"] = "Single";
  })(SelectionMode || (SelectionMode = {}));

  _exports.SelectionMode = SelectionMode;

  /**
   * Create a wrapper object that ensure consistent return data from the manifest and that will take care of merging the different manifest "sauce".
   *
   * @param {BaseManifestSettings} oManifestSettings the manifest settings for the current page
   * @param {Function} mergeFn
   * @returns {ManifestWrapper} the manifest wrapper object
   */
  function createManifestWrapper(oManifestSettings, mergeFn) {
    return {
      getFormContainer: function (facetDefinition) {
        var _oManifestSettings$co;

        return (_oManifestSettings$co = oManifestSettings.controlConfiguration) === null || _oManifestSettings$co === void 0 ? void 0 : _oManifestSettings$co[facetDefinition.Target.value];
      },
      getHeaderFacets: function () {
        var _oManifestSettings$co2, _oManifestSettings$co3, _content, _content$header;

        return mergeFn({}, (_oManifestSettings$co2 = oManifestSettings.controlConfiguration) === null || _oManifestSettings$co2 === void 0 ? void 0 : (_oManifestSettings$co3 = _oManifestSettings$co2["@com.sap.vocabularies.UI.v1.HeaderFacets"]) === null || _oManifestSettings$co3 === void 0 ? void 0 : _oManifestSettings$co3.facets, (_content = oManifestSettings.content) === null || _content === void 0 ? void 0 : (_content$header = _content.header) === null || _content$header === void 0 ? void 0 : _content$header.facets);
      },
      getHeaderActions: function () {
        var _oManifestSettings$co4, _oManifestSettings$co5;

        return ((_oManifestSettings$co4 = oManifestSettings.content) === null || _oManifestSettings$co4 === void 0 ? void 0 : (_oManifestSettings$co5 = _oManifestSettings$co4.header) === null || _oManifestSettings$co5 === void 0 ? void 0 : _oManifestSettings$co5.actions) || {};
      },
      getFooterActions: function () {
        var _oManifestSettings$co6, _oManifestSettings$co7;

        return ((_oManifestSettings$co6 = oManifestSettings.content) === null || _oManifestSettings$co6 === void 0 ? void 0 : (_oManifestSettings$co7 = _oManifestSettings$co6.footer) === null || _oManifestSettings$co7 === void 0 ? void 0 : _oManifestSettings$co7.actions) || {};
      },
      getVariantManagement: function () {
        return oManifestSettings.variantManagement || VariantManagementType.None;
      },
      getDefaultTemplateAnnotationPath: function () {
        return oManifestSettings.defaultTemplateAnnotationPath;
      },
      getControlConfiguration: function (sAnnotationPath) {
        var _oManifestSettings$co8;

        return (oManifestSettings === null || oManifestSettings === void 0 ? void 0 : (_oManifestSettings$co8 = oManifestSettings.controlConfiguration) === null || _oManifestSettings$co8 === void 0 ? void 0 : _oManifestSettings$co8[sAnnotationPath]) || {};
      },
      getNavigationConfiguration: function (navigationOrCollectionName) {
        var _oManifestSettings$na;

        return (oManifestSettings === null || oManifestSettings === void 0 ? void 0 : (_oManifestSettings$na = oManifestSettings.navigation) === null || _oManifestSettings$na === void 0 ? void 0 : _oManifestSettings$na[navigationOrCollectionName]) || {};
      },
      getSections: function () {
        var _oManifestSettings$co9, _oManifestSettings$co10, _content2, _content2$body;

        return mergeFn({}, (_oManifestSettings$co9 = oManifestSettings.controlConfiguration) === null || _oManifestSettings$co9 === void 0 ? void 0 : (_oManifestSettings$co10 = _oManifestSettings$co9["@com.sap.vocabularies.UI.v1.Facets"]) === null || _oManifestSettings$co10 === void 0 ? void 0 : _oManifestSettings$co10.sections, (_content2 = oManifestSettings.content) === null || _content2 === void 0 ? void 0 : (_content2$body = _content2.body) === null || _content2$body === void 0 ? void 0 : _content2$body.sections);
      },
      isHeaderEditable: function () {
        return this.getShowObjectPageHeader() && oManifestSettings.editableHeaderContent;
      },
      getViewConfiguration: function () {
        return oManifestSettings.views;
      },
      getViewLevel: function () {
        return (oManifestSettings === null || oManifestSettings === void 0 ? void 0 : oManifestSettings.viewLevel) || -1;
      },
      useIconTabBar: function () {
        return this.getShowAnchorBar() && oManifestSettings.sectionLayout === "Tabs";
      },
      getContentDensities: function () {
        return (oManifestSettings === null || oManifestSettings === void 0 ? void 0 : oManifestSettings.contentDensities) || {
          cozy: false,
          compact: false
        };
      },
      isFclEnabled: function () {
        return !!(oManifestSettings === null || oManifestSettings === void 0 ? void 0 : oManifestSettings.fclEnabled);
      },
      getFilterConfiguration: function () {
        return this.getControlConfiguration("@com.sap.vocabularies.UI.v1.SelectionFields");
      },
      hasMultipleEntitySets: function () {
        var viewConfig = this.getViewConfiguration() || {
          paths: []
        };
        return viewConfig.paths.find(function (path) {
          return path.entitySet && path.entitySet !== oManifestSettings.entitySet;
        }) !== undefined;
      },
      getShowAnchorBar: function () {
        var _content3, _content3$header, _content4, _content4$header;

        return ((_content3 = oManifestSettings.content) === null || _content3 === void 0 ? void 0 : (_content3$header = _content3.header) === null || _content3$header === void 0 ? void 0 : _content3$header.anchorBarVisible) !== undefined ? !!((_content4 = oManifestSettings.content) === null || _content4 === void 0 ? void 0 : (_content4$header = _content4.header) === null || _content4$header === void 0 ? void 0 : _content4$header.anchorBarVisible) : true;
      },
      getShowObjectPageHeader: function () {
        var _content5, _content5$header, _content6, _content6$header;

        return ((_content5 = oManifestSettings.content) === null || _content5 === void 0 ? void 0 : (_content5$header = _content5.header) === null || _content5$header === void 0 ? void 0 : _content5$header.visible) !== undefined ? !!((_content6 = oManifestSettings.content) === null || _content6 === void 0 ? void 0 : (_content6$header = _content6.header) === null || _content6$header === void 0 ? void 0 : _content6$header.visible) : true;
      }
    };
  }

  _exports.createManifestWrapper = createManifestWrapper;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,