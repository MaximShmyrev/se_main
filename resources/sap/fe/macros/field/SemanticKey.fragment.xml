<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:control="sap.fe.core.controls"
	xmlns:macroField="sap.fe.macros.field"
	template:require="{
							FIELD: 'sap/fe/macros/field/FieldHelper',
							MODEL: 'sap/ui/model/odata/v4/AnnotationHelper'
						 }"
>
	<template:if test="{propertyPath>@com.sap.vocabularies.Common.v1.SemanticObject}">
		<template:then>
			<template:if test="{= ${this>formatOptions/semanticKeyStyle} === 'ObjectIdentifier' }">
				<template:then>
					<ObjectIdentifier
						title="{= FIELD.getLabelTextForDataField(${entitySet>@}, ${propertyPath>@}, ${propertyPath>@@FIELD.buildExpressionForTextValue}, ${property>@@MODEL.format}, ${dataField>@sapui.name}, ${this>formatOptions/semanticKeyStyle}) }"
						text="{= FIELD.getObjectIdentifierText(${propertyPath>@com.sap.vocabularies.Common.v1.Text}, ${propertyPath>@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${property>@@MODEL.value}, ${dataField>@sapui.name})}"
						core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
						titleActive="{= FIELD.hasSemanticObjectTargets(${propertyPath>@com.sap.vocabularies.Common.v1.SemanticObject}, ${propertyPath>@com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions}, ${property>@@UI.getConverterContext} , ${property>@@UI.getDataModelObjectPath} ) }"
						titlePress="FieldRuntime.pressLink"
						unittest:id="MacroDataFieldObjectIdentifier"
						ariaLabelledBy="{this>ariaLabelledBy}"
					>
						<dependents>
							<macroField:QuickViewForm dataField="{dataField>}" />
						</dependents>
					</ObjectIdentifier>
				</template:then>
				<template:else>
					<control:LinkWrapper
						id="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, 'Field-display']) : undefined) }"
						core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
						hasTargetsAvailable="{= FIELD.hasSemanticObjectTargets(${propertyPath>@com.sap.vocabularies.Common.v1.SemanticObject}, ${propertyPath>@com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions}, ${property>@@UI.getConverterContext} , ${property>@@UI.getDataModelObjectPath} ) }"
					>
						<control:contentTargets>
							<Link
								id="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, 'Field-Link']) : undefined) }"
								visible="{= ${dataField>@@COMMON.getHiddenPathExpression}}"
								text="{ parts:[ {path:'property>'},{path:'propertyPath>@'}, {path:'propertyPath>@@FIELD.buildExpressionForTextValue'}, {path:'this>formatOptions'}], formatter: 'FIELD.buildFieldBindingExpression'}"
								wrapping="true"
								core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
								press="FieldRuntime.pressLink"
								ariaLabelledBy="{this>ariaLabelledBy}"
							>
								<dependents>
									<macroField:QuickViewForm dataField="{dataField>}" entityType="{entityType>}" />
								</dependents>
							</Link>
						</control:contentTargets>
						<control:contentNoTargets>
							<Text
								id="{=  (${this>idPrefix} ? ID.generate([${this>idPrefix}, 'Field-Text']) : undefined) }"
								text="{ parts:[ {path:'property>'},{path:'propertyPath>@'}, {path:'propertyPath>@@FIELD.buildExpressionForTextValue'}, {path:'this>formatOptions'}], formatter: 'FIELD.buildFieldBindingExpression'}"
								visible="{= ${dataField>@@COMMON.getHiddenPathExpression}}"
							/>
						</control:contentNoTargets>
					</control:LinkWrapper>
				</template:else>
			</template:if>
		</template:then>
		<template:else>
			<template:if test="{= ${this>formatOptions/semanticKeyStyle} === 'ObjectIdentifier' }">
				<template:then>
					<ObjectIdentifier
						title="{= FIELD.getLabelTextForDataField(${entitySet>@}, ${propertyPath>@}, ${propertyPath>@@FIELD.buildExpressionForTextValue}, ${property>@@MODEL.format}, ${dataField>@sapui.name}, ${this>formatOptions/semanticKeyStyle}) }"
						text="{= FIELD.getObjectIdentifierText(${propertyPath>@com.sap.vocabularies.Common.v1.Text}, ${propertyPath>@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${property>@@MODEL.value}, ${dataField>@sapui.name})}"
					/>
				</template:then>
				<template:else>
					<Label
						unittest:id="MacroDataFieldLabel"
						text="{= FIELD.getLabelTextForDataField(${entitySet>@}, ${propertyPath>@}, ${propertyPath>@@FIELD.buildExpressionForTextValue}, ${property>@@MODEL.format}, ${dataField>@sapui.name}, ${this>formatOptions/semanticKeyStyle}) }"
						design="Bold"
					/>
				</template:else>
			</template:if>
		</template:else>
	</template:if>

</core:FragmentDefinition>
