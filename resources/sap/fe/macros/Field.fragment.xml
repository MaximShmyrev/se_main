<core:FragmentDefinition
	xmlns="sap.m"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:core="sap.ui.core"
	xmlns:macro="sap.fe.macros"
	xmlns:internalMacro="sap.fe.macros.internal"
	template:require="{
		ID: 'sap/fe/core/helpers/StableIdHelper',
		FIELD: 'sap/fe/macros/field/FieldHelper'
	}"
>

<!--	idPrefix="{= ${this>id} ? ID.generate([${this>id}, 'FormElement', ${formElements>}]) : '' }"-->
	<internalMacro:Field
		entitySet="{contextPath>}"
		dataField="{metaPath>}"
		editMode="{this>editModeExpression}"
		onChange="{this>onChange}"
		_flexId="{this>id}"
	>
<!--		<macro:formatOptions-->
<!--			displayMode="{= ${source>valueHelpWithFixedValues} ? undefined : ValueHelpTemplating.getValueHelpTableDisplayMode(${property>@@Property.getPropertyObjectPath})}"-->
<!--			textLinesDisplay="4"-->
<!--			textLinesEdit="4"-->
<!--			textAlignMode="Form"-->
<!--			showEmptyIndicator="true"-->
<!--		/>-->
		<template:if test="{=FIELD.isValueHelp(${property>@})}">
			<macro:dependents>
				<macro:ValueHelp _flexId="{this>id}_FieldValueHelp" property="{property>}" />
			</macro:dependents>
		</template:if>
	</internalMacro:Field>
</core:FragmentDefinition>
<!--&gt; wenn von fe = Expression von fe > wenn nicht fe = complex binding expression von Entwickler (true / false) > Expression wrapped > Display / Editable-->
