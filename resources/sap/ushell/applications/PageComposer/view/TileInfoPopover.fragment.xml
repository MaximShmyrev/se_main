<core:FragmentDefinition
    xmlns="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:form="sap.ui.layout.form"
    core:require="{
        GenericTileScope: 'sap/m/GenericTileScope',
        formatMessage: 'sap/base/strings/formatMessage',
        ushellLibrary: 'sap/ushell/library'
    }">
    <ResponsivePopover id="responsivePopover" showHeader="false" placement="HorizontalPreferredLeft">
        <form:SimpleForm id="simpleForm" title="{title}" layout="ResponsiveGridLayout" editable="false" width="350px">
            <form:content>
                <MessageStrip
                    id="insufficientRolesMessageStrip"
                    visible="{= ${extraData>/state} === ushellLibrary.VisualizationLoadState.InsufficientRoles}"
                    text="{ parts: ['i18n>TileInfoPopover.InsufficientRoles', 'catalogDisplayId'], formatter: 'formatMessage' }"
                    showIcon="true"
                    showCloseButton="false" />
                <MessageStrip
                    id="roleContextMessageStrip"
                    visible="{= ${extraData>/state} === ushellLibrary.VisualizationLoadState.OutOfRoleContext}"
                    text="{i18n>TileInfoPopover.NotAvailableInRoleContext}"
                    showIcon="true"
                    showCloseButton="false" />

                <Label
                    id="supportedDisplayFormatHintLabel"
                    text="{i18n>TileInfoPopover.SupportedDisplayFormatHint}"
                    visible="{= !!${extraData>/supportedDisplayFormats} &amp;&amp; (${extraData>/scope} === GenericTileScope.Display)}" />
                <Text
                    id="supportedDisplayFormatHint"
                    visible="{= !!${extraData>/supportedDisplayFormats} &amp;&amp; (${extraData>/scope} === GenericTileScope.Display)}"
                    text="{extraData>/supportedDisplayFormats}" />

                <Label
                    id="displayFormatHintLabel"
                    text="{i18n>TileInfoPopover.DisplayFormatHint}"
                    visible="{= !!${displayFormatHint} &amp;&amp; (${extraData>/scope} !== GenericTileScope.Display)}" />
                <Select
                    id="displayFormatHint"
                    selectedKey="{displayFormatHint}"
                    visible="{= !!${displayFormatHint} &amp;&amp; (${extraData>/scope} !== GenericTileScope.Display)}"
                    items="{extraData>/displayFormats}">
                    <core:Item text="{extraData>label}" key="{extraData>value}" />
                </Select>

                <Label id="subtitleLabel" visible="{= !!${subTitle}}" text="{i18n>TileInfoPopover.Subtitle}" />
                <Text id="subtitle" visible="{= !!${subTitle}}" text="{subTitle}" />

                <Label id="iconLabel" visible="{= !!${iconUrl}}" text="{i18n>TileInfoPopover.Icon}" />
                <core:Icon
                    id="icon"
                    visible="{= !!${iconUrl}}"
                    decorative="false"
                    src="{= ${iconUrl} || 'sap-icon://border'}"
                    size="1.5rem"
                    width="1.5rem" />

                <Label id="semanticObjectLabel" visible="{= !!${semanticObject}}" text="{i18n>TileInfoPopover.SemanticObject}" />
                <Text id="semanticObject" visible="{= !!${semanticObject}}" text="{semanticObject}" />

                <Label id="semanticActionLabel" visible="{= !!${semanticAction}}" text="{i18n>TileInfoPopover.SemanticAction}" />
                <Text id="semanticAction" visible="{= !!${semanticAction}}" text="{semanticAction}" />

                <Label id="fioriIDLabel" visible="{= !!${fioriId}}" text="{i18n>TileInfoPopover.FioriID}" />
                <Text id="fioriID" visible="{= !!${fioriId}}" text="{fioriId}" />

                <Label id="appDetailLabel" visible="{= !!${appDetail}}" text="{i18n>TileInfoPopover.AppDetail}" />
                <Text id="appDetail" visible="{= !!${appDetail}}" text="{appDetail}" />

                <Label id="appTypeLabel" visible="{= !!${appType}}" text="{i18n>TileInfoPopover.AppType}" />
                <Text id="appType" visible="{= !!${appType}}" text="{appType}" />

                <Label id="tileTypeLabel" visible="{= !!${tileType}}" text="{i18n>TileInfoPopover.TileType}" />
                <Text id="tileType" visible="{= !!${tileType}}" text="{ path: 'tileType', formatter: '._formatTileType' }" />

                <Label id="targetMappingIdLabel" visible="{= !!${targetMappingId}}" text="{i18n>TileInfoPopover.TargetMappingId}" />
                <Text id="targetMappingId" visible="{= !!${targetMappingId}}" text="{targetMappingId}" />

                <Label id="catalogTileIdLabel" visible="{= !!${catalogTileId}}" text="{i18n>TileInfoPopover.CatalogTileId}" />
                <Text id="catalogTileId" visible="{= !!${catalogTileId}}" text="{catalogTileId}" />

                <Label id="catalogDisplayIdLabel" visible="{= !!${catalogDisplayId}}" text="{i18n>TileInfoPopover.CatalogDisplayId}" />
                <Text id="catalogDisplayId" visible="{= !!${catalogDisplayId}}" text="{catalogDisplayId}" />

                <Label
                    id="deviceWrapperLabel"
                    visible="{= !!${deviceDesktop} || !!${deviceTablet} || !!${devicePhone}}"
                    text="{i18n>TileInfoPopover.AvailableDevices}" />
                <HBox
                    id="deviceWrapper"
                    visible="{= !!${deviceDesktop} || !!${deviceTablet} || !!${devicePhone}}"
                    justifyContent="SpaceAround">
                    <core:Icon
                        id="deviceDesktop"
                        visible="{= !!${deviceDesktop}}"
                        src="sap-icon://laptop"
                        decorative="false"
                        tooltip="{i18n>Tooltip.Desktop}" />
                    <core:Icon id="deviceTablet" visible="{= !!${deviceTablet}}" src="sap-icon://ipad-2" decorative="false" />
                    <core:Icon id="devicePhone" visible="{= !!${devicePhone}}" src="sap-icon://iphone" decorative="false" />
                </HBox>
            </form:content>
        </form:SimpleForm>
    </ResponsivePopover>
</core:FragmentDefinition>
